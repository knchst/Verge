(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{165:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return d}));var r=a(2),n=a(9),o=(a(0),a(168)),i={id:"derived",title:"Derived / BindingDerived - derives a any shape value from the state",sidebar_label:"Derived / BindingDerived"},c={id:"VergeStore/derived",isDocsHomePage:!1,title:"Derived / BindingDerived - derives a any shape value from the state",description:"Derived is inspired by redux/reselect.",source:"@site/docs/VergeStore/derived.md",permalink:"docs/VergeStore/derived",editUrl:"https://github.com/VergeGroup/Verge/docs/docs/VergeStore/derived.md",sidebar_label:"Derived / BindingDerived",sidebar:"docs",previous:{title:"Extended Computed property on the State",permalink:"docs/VergeStore/extended-computed-property"},next:{title:"Dispatcher - performs a mutation from away the store",permalink:"docs/VergeStore/dispatcher"}},s=[{value:"Overview",id:"overview",children:[{value:"Create a Derived object from the Store",id:"create-a-derived-object-from-the-store",children:[]}]},{value:"Take a value",id:"take-a-value",children:[]},{value:"Subscribe the latest value Derived provides",id:"subscribe-the-latest-value-derived-provides",children:[]},{value:"Supports other Reactive Frameworks",id:"supports-other-reactive-frameworks",children:[{value:"+ Combine",id:"-combine",children:[]},{value:"+ RxSwift",id:"-rxswift",children:[]}]},{value:"Memoization to keep good performance",id:"memoization-to-keep-good-performance",children:[]},{value:"Skips the map operation if the source state has no changes",id:"skips-the-map-operation-if-the-source-state-has-no-changes",children:[]}],l={rightToc:s};function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Derived")," is inspired by ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/reduxjs/reselect"}),"redux/reselect"),".")),Object(o.b)("p",null,"Derived's functions are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Computes the derived data from the state tree"),Object(o.b)("li",{parentName:"ul"},"Emit the updated data with updating Store"),Object(o.b)("li",{parentName:"ul"},"Supports subscribe the data"),Object(o.b)("li",{parentName:"ul"},"Supports Memoization"),Object(o.b)("li",{parentName:"ul"},"Compatible with SwiftUI's observableObject and ",Object(o.b)("inlineCode",{parentName:"li"},"UseState"))),Object(o.b)("h2",{id:"overview"},"Overview"),Object(o.b)("h3",{id:"create-a-derived-object-from-the-store"},"Create a Derived object from the Store"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Select a tree from the state")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"let derived: Derived<Int> = store.derived(.map(\\.count))\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"// we can write also this.\n// However, we recommend do above way as possible\n// because it enables cache.\nlet derived: Derived<Int> = store.derived(.map { $0.count })\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Technically, above method callings are produced from below declaration.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"extension StoreType {\n  public func derived<NewState>(_ memoizeMap: MemoizeMap<Changes<State>, NewState>, dropsOutput: ((Changes<NewState>) -> Bool)? = nil, queue: TargetQueue? = nil) -> Derived<NewState>\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"MemoizeMap")," manages to transform value from the state and keep performance that way of drops transform operations if the input value no changes."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Compute a value from the state")),Object(o.b)("p",null,"Derived can create any type of value what we need.\nMemoizeMap"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"let derived = store.derived(.map(derive: { ($0.name, $0.age) }, dropsDerived: ==) { args in\n  let (name, age) = args\n  ...\n  return ...\n})\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u2705\nThis method is quite optimized the performance If you create a Derived object that computes a new shape value that using multiple values from the state.\nBecause Derived object uses the specified derived value to create a new shape value, It can detect no need to compute that value if the input derived value not changed.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Most manually way of creating a Derived object")),Object(o.b)("p",null,"We can create fully tuned up Derived object with using custom initialized ",Object(o.b)("inlineCode",{parentName:"p"},"MemoizedMap"),".\nMost of the cases, we don't need to do this.\nBecause several overloaded methods enable optimizations automatically that depending on doing things.\nVerge shows current optimization status from the Complexity column of Xcode documentation."),Object(o.b)("img",{width:"533",alt:"CleanShot 2020-05-31 at 00 46 27@2x",src:"https://user-images.githubusercontent.com/1888355/83332811-41df2480-a2d8-11ea-8da0-d86c127fc926.png"}),Object(o.b)("h2",{id:"take-a-value"},"Take a value"),Object(o.b)("p",null,"Derived is an object (reference type). It provides a latest value from a store.\nThis supports getting the value ad-hoc or subscribing the value updating."),Object(o.b)("p",null,"Derived allows us to take the latest value at the time."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"let value: Int = derived.value\n")),Object(o.b)("h2",{id:"subscribe-the-latest-value-derived-provides"},"Subscribe the latest value Derived provides"),Object(o.b)("p",null,"Derived allows us to subscribe to the updated value."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"let cancellable = derived.sinkValue { (changes: Changes<Int>) in\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u2705\nPlease, carefully handle a cancellable object. A concealable object that returns that subscribe method is similar to AnyCancellable of Combine.framework. We need to retain that until we don't need to get the update event.")),Object(o.b)("h2",{id:"supports-other-reactive-frameworks"},"Supports other Reactive Frameworks"),Object(o.b)("p",null,"We might need to use some Reactive framework to integrate other sequence. Derived allows us to make to a sequence from itself. Currently, it supports Combine.framework and RxSwift.framework."),Object(o.b)("h3",{id:"-combine"},"+ Combine"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"derived\n  .valuePublisher()\n  .sink { (changes: Changes<Int>) in\n\n  }\n")),Object(o.b)("h3",{id:"-rxswift"},"+ RxSwift"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83d\udca1You need to install VergeRx module to use this.")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"derived.rx\n  .changesObservable()\n  .subscribe(onNext: { (changes: Changes<Int>) in\n\n  })\n")),Object(o.b)("h2",{id:"memoization-to-keep-good-performance"},"Memoization to keep good performance"),Object(o.b)("p",null,"Mostly Derived is used for projecting the specified shape from the source object.\nAnd some cases may contain an expensive operation. In that case, we can consider to tune Memoization up.\u200b\nWe can see the detail of Memoization from below link."),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"%5Bhttps://en.wikipedia.org/wiki/Memoization%5D(https://en.wikipedia.org/wiki/Memoization)"}),"Wiki - Memoization")),Object(o.b)("h2",{id:"skips-the-map-operation-if-the-source-state-has-no-changes"},"Skips the map operation if the source state has no changes"),Object(o.b)("p",null,"In create Derived method, we can get the detail that how we suppress the no need updating and updated event."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-swift"}),"extension StoreType {\n\n  public func derived<NewState>(\n    _ memoizeMap: MemoizeMap<Changes<State>, NewState>,\n    dropsOutput: @escaping (Changes<NewState>) -> Bool = { _ in false }\n  ) -> Derived<NewState>\n\n}\n")))}d.isMDXComponent=!0},168:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),d=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=d(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(a),b=r,m=p["".concat(i,".").concat(b)]||p[b]||u[b]||o;return a?n.a.createElement(m,c(c({ref:t},l),{},{components:a})):n.a.createElement(m,c({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);